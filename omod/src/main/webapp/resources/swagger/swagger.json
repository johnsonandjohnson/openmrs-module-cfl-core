{
  "swagger" : "2.0",
  "info" : {
    "description" : "REST API for CFL Module.",
    "version" : "v1",
    "title" : "CFL Module REST API"
  },
  "basePath" : "/openmrs/ws",
  "tags" : [ {
    "name" : "REST API for Caregiver registration"
  }, {
    "name" : "REST API for Patient registration"
  }, {
    "name" : "REST API for Regimens"
  }, {
    "name" : "REST API for ad hoc message"
  }, {
    "name" : "REST API to Monitor CFL"
  }, {
    "name" : "REST API to get Person data"
  }, {
    "name" : "REST API to handle CFL Address data"
  }, {
    "name" : "REST API to handle Country data"
  } ],
  "paths" : {
    "/caregiverRegistration" : {
      "post" : {
        "tags" : [ "REST API for Caregiver registration" ],
        "summary" : "Caregiver registration",
        "description" : "Caregiver registration",
        "operationId" : "registerCaregiver",
        "parameters" : [ {
          "in" : "body",
          "name" : "registrationRequestBody",
          "description" : "Request body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful registration of Caregiver",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Error in registration of Caregiver"
          },
          "500" : {
            "description" : "Failure to register Caregiver"
          }
        }
      },
      "put" : {
        "tags" : [ "REST API for Caregiver registration" ],
        "summary" : "Caregiver registration",
        "description" : "Caregiver registration",
        "operationId" : "registerCaregiver",
        "parameters" : [ {
          "in" : "body",
          "name" : "registrationRequestBody",
          "description" : "Request body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful registration of Caregiver",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Error in registration of Caregiver"
          },
          "500" : {
            "description" : "Failure to register Caregiver"
          }
        }
      }
    },
    "/cfl/address-data" : {
      "get" : {
        "tags" : [ "REST API to handle CFL Address data" ],
        "summary" : "Get address list",
        "description" : "Get address list",
        "operationId" : "getAddressList",
        "parameters" : [ {
          "in" : "body",
          "name" : "pageableParams",
          "description" : "The pageable params",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PageableParams"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful returning address list",
            "schema" : {
              "$ref" : "#/definitions/AddressDataDTO"
            }
          },
          "400" : {
            "description" : "Error in returning address list"
          },
          "500" : {
            "description" : "Failure to return address list"
          }
        }
      }
    },
    "/cfl/address-data/upload" : {
      "post" : {
        "tags" : [ "REST API to handle CFL Address data" ],
        "summary" : "Upload file",
        "description" : "Upload file",
        "operationId" : "uploadFile",
        "parameters" : [ {
          "in" : "body",
          "name" : "file",
          "description" : "The multipart file",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartFile"
          }
        }, {
          "name" : "delimiter",
          "in" : "query",
          "description" : "The delimiter used in file",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userGeneratedIdDelimiter",
          "in" : "query",
          "description" : "The user generated ID delimiter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "overwrite",
          "in" : "query",
          "description" : "Overwrite boolean value",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful uploading file",
            "schema" : {
              "$ref" : "#/definitions/ImportDataResultDTO"
            }
          },
          "400" : {
            "description" : "Error in uploading file"
          },
          "500" : {
            "description" : "Failure to upload file"
          }
        }
      }
    },
    "/cfl/regimens/patient-info" : {
      "get" : {
        "tags" : [ "REST API for Regimens" ],
        "summary" : "Regimens Patients information",
        "description" : "Regimens Patients information",
        "operationId" : "getRegimensPatientsInfo",
        "responses" : {
          "200" : {
            "description" : "On successful getting regimens Patients info"
          },
          "400" : {
            "description" : "Error in getting regimens Patients info"
          },
          "500" : {
            "description" : "Failure to get regimens Patients info"
          }
        }
      }
    },
    "/module/cfl/adHocMessage.form" : {
      "get" : {
        "tags" : [ "REST API for ad hoc message" ],
        "summary" : "Get an empty ad hoc message",
        "description" : "Get an empty ad hoc message",
        "operationId" : "onGet",
        "responses" : {
          "200" : {
            "description" : "On successful getting an empty ad hoc message",
            "schema" : {
              "$ref" : "#/definitions/ModelAndView"
            }
          },
          "400" : {
            "description" : "Error in getting an empty ad hoc message"
          },
          "500" : {
            "description" : "Failure getting an empty ad hoc message"
          }
        }
      },
      "post" : {
        "tags" : [ "REST API for ad hoc message" ],
        "summary" : "Send ad hoc message",
        "description" : "Send ad hoc message",
        "operationId" : "onPost",
        "parameters" : [ {
          "in" : "body",
          "name" : "servletRequest",
          "description" : "Servlet request",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HttpServletRequest"
          }
        }, {
          "in" : "body",
          "name" : "model",
          "description" : "Ad hoc message model",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AdHocMessageControllerModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful sending ad hoc message",
            "schema" : {
              "$ref" : "#/definitions/ModelAndView"
            }
          },
          "400" : {
            "description" : "Error sending ad hoc message"
          },
          "500" : {
            "description" : "Failure sending ad hoc message"
          }
        }
      }
    },
    "/module/cfl/countryForm.form" : {
      "get" : {
        "tags" : [ "REST API to handle Country data" ],
        "summary" : "Get country form",
        "description" : "Get country form",
        "operationId" : "getCountryForm",
        "responses" : {
          "200" : {
            "description" : "On successful getting country form",
            "schema" : {
              "$ref" : "#/definitions/ModelAndView"
            }
          },
          "400" : {
            "description" : "Error in getting country form"
          },
          "500" : {
            "description" : "Failure to get country form"
          }
        }
      },
      "post" : {
        "tags" : [ "REST API to handle Country data" ],
        "summary" : "Add country",
        "description" : "add country",
        "operationId" : "addCountry",
        "parameters" : [ {
          "in" : "body",
          "name" : "httpServletRequest",
          "description" : "Servlet request",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HttpServletRequest"
          }
        }, {
          "in" : "body",
          "name" : "model",
          "description" : "Country model",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CountryControllerModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful adding country",
            "schema" : {
              "$ref" : "#/definitions/ModelAndView"
            }
          },
          "400" : {
            "description" : "Error adding country"
          },
          "500" : {
            "description" : "Failure to add country"
          }
        }
      }
    },
    "/module/cfl/countryImport.form" : {
      "get" : {
        "tags" : [ "REST API to handle Country data" ],
        "summary" : "Country import form",
        "description" : "Country import form",
        "operationId" : "getCountryImportForm",
        "responses" : {
          "200" : {
            "description" : "On successful getting Country import form",
            "schema" : {
              "$ref" : "#/definitions/ModelAndView"
            }
          },
          "400" : {
            "description" : "Error in getting Country import form"
          },
          "500" : {
            "description" : "Failure to get Country import form"
          }
        }
      },
      "post" : {
        "tags" : [ "REST API to handle Country data" ],
        "summary" : "Import Country",
        "description" : "Import Country",
        "operationId" : "importCountriesFromFile",
        "parameters" : [ {
          "in" : "body",
          "name" : "httpServletRequest",
          "description" : "Servlet request",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HttpServletRequest"
          }
        }, {
          "in" : "body",
          "name" : "file",
          "description" : "File containing country details",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartFile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful importing Country",
            "schema" : {
              "$ref" : "#/definitions/ModelAndView"
            }
          },
          "400" : {
            "description" : "Error in importing Country"
          },
          "500" : {
            "description" : "Failure to import Country"
          }
        }
      }
    },
    "/module/cfl/countryList.form" : {
      "get" : {
        "tags" : [ "REST API to handle Country data" ],
        "summary" : "Get country list",
        "description" : "Get country list",
        "operationId" : "getCountryList",
        "responses" : {
          "200" : {
            "description" : "On successful getting country list",
            "schema" : {
              "$ref" : "#/definitions/ModelAndView"
            }
          },
          "400" : {
            "description" : "Error in getting country list"
          },
          "500" : {
            "description" : "Failure to get country list"
          }
        }
      }
    },
    "/module/cfl/editCountryForm.form" : {
      "get" : {
        "tags" : [ "REST API to handle Country data" ],
        "summary" : "Get edit country page",
        "description" : "Get edit country page",
        "operationId" : "getEditCountryPage",
        "parameters" : [ {
          "name" : "conceptId",
          "in" : "query",
          "description" : "Concept Id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful getting edit country page",
            "schema" : {
              "$ref" : "#/definitions/ModelAndView"
            }
          },
          "400" : {
            "description" : "Error in getting edit country page"
          },
          "500" : {
            "description" : "Failure to get edit country page"
          }
        }
      },
      "post" : {
        "tags" : [ "REST API to handle Country data" ],
        "summary" : "Edit country page",
        "description" : "Edit country page",
        "operationId" : "editCountry",
        "parameters" : [ {
          "name" : "conceptId",
          "in" : "query",
          "description" : "Concept Id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "httpServletRequest",
          "description" : "Servlet request",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HttpServletRequest"
          }
        }, {
          "in" : "body",
          "name" : "model",
          "description" : "Country model",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CountryControllerModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful editing country page",
            "schema" : {
              "$ref" : "#/definitions/ModelAndView"
            }
          },
          "400" : {
            "description" : "Error in editing country page"
          },
          "500" : {
            "description" : "Failure to edit country page"
          }
        }
      }
    },
    "/monitoring" : {
      "get" : {
        "tags" : [ "REST API to Monitor CFL" ],
        "summary" : "Get system status",
        "description" : "Get system status",
        "operationId" : "getSystemStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "statusOnly",
          "in" : "query",
          "description" : "Status only flag",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "component",
          "in" : "query",
          "description" : "Component",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful getting system status",
            "schema" : {
              "$ref" : "#/definitions/SystemStatusResponseBody"
            }
          },
          "400" : {
            "description" : "Error in getting system status"
          },
          "500" : {
            "description" : "Failure to get system status"
          }
        }
      }
    },
    "/patientRegistration" : {
      "post" : {
        "tags" : [ "REST API for Patient registration" ],
        "summary" : "Patient registration",
        "description" : "Patient registration",
        "operationId" : "registerPatient",
        "parameters" : [ {
          "in" : "body",
          "name" : "registrationRequest",
          "description" : "Request",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ServletRequest"
          }
        }, {
          "in" : "body",
          "name" : "registrationRequestBody",
          "description" : "Request body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful registration of Patient",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Error in registration of Patient"
          },
          "500" : {
            "description" : "Failure to register Patient"
          }
        }
      },
      "put" : {
        "tags" : [ "REST API for Patient registration" ],
        "summary" : "Update Patient",
        "description" : "Update Patient",
        "operationId" : "updatePatient",
        "parameters" : [ {
          "in" : "body",
          "name" : "registrationRequestBody",
          "description" : "Request body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful updating Patient",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Error in updating Patient"
          },
          "500" : {
            "description" : "Failure to update Patient"
          }
        }
      }
    },
    "/people" : {
      "get" : {
        "tags" : [ "REST API to get Person data" ],
        "summary" : "Get person data",
        "description" : "Get person data",
        "operationId" : "getPeople",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Query to get people",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "On successful getting person data",
            "schema" : {
              "$ref" : "#/definitions/ResultsWrapperDTO"
            }
          },
          "400" : {
            "description" : "Error in getting person data"
          },
          "500" : {
            "description" : "Failure to get person data"
          }
        }
      }
    }
  },
  "definitions" : {
    "AdHocMessageControllerModel" : {
      "type" : "object",
      "properties" : {
        "messageRequest" : {
          "$ref" : "#/definitions/AdHocMessageRequestDTO"
        },
        "recipients" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PersonDTO"
          }
        }
      }
    },
    "AdHocMessagePatientFilterDTO" : {
      "type" : "object",
      "properties" : {
        "label" : {
          "type" : "string"
        },
        "filterTypeName" : {
          "type" : "string"
        },
        "options" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Option"
          }
        },
        "value" : {
          "type" : "object"
        },
        "secondValue" : {
          "type" : "object"
        },
        "manyValues" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "AdHocMessageRequestDTO" : {
      "type" : "object",
      "properties" : {
        "deliveryDateTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "callChannel" : {
          "type" : "boolean",
          "default" : false
        },
        "smsChannel" : {
          "type" : "boolean",
          "default" : false
        },
        "callFlowName" : {
          "type" : "string"
        },
        "messageTemplate" : {
          "type" : "string"
        },
        "filters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AdHocMessagePatientFilterDTO"
          }
        },
        "channels" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AddressDataContent" : {
      "type" : "object",
      "properties" : {
        "content" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "AddressDataDTO" : {
      "type" : "object",
      "properties" : {
        "pageNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "content" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AddressDataContent"
          }
        },
        "nextPage" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "BufferedReader" : {
      "type" : "object"
    },
    "Cookie" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "comment" : {
          "type" : "string"
        },
        "domain" : {
          "type" : "string"
        },
        "maxAge" : {
          "type" : "integer",
          "format" : "int32"
        },
        "path" : {
          "type" : "string"
        },
        "secure" : {
          "type" : "boolean",
          "default" : false
        },
        "version" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CountryControllerModel" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "countryCode" : {
          "type" : "string"
        },
        "conceptMap" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "clusterMembers" : {
          "type" : "string"
        }
      }
    },
    "Enumeration" : {
      "type" : "object"
    },
    "HttpServletRequest" : {
      "type" : "object",
      "properties" : {
        "authType" : {
          "type" : "string"
        },
        "cookies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Cookie"
          }
        },
        "headerNames" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "pathInfo" : {
          "type" : "string"
        },
        "pathTranslated" : {
          "type" : "string"
        },
        "remoteUser" : {
          "type" : "string"
        },
        "requestedSessionId" : {
          "type" : "string"
        },
        "requestURI" : {
          "type" : "string"
        },
        "requestURL" : {
          "$ref" : "#/definitions/StringBuffer"
        },
        "servletPath" : {
          "type" : "string"
        },
        "requestedSessionIdValid" : {
          "type" : "boolean",
          "default" : false
        },
        "requestedSessionIdFromCookie" : {
          "type" : "boolean",
          "default" : false
        },
        "requestedSessionIdFromURL" : {
          "type" : "boolean",
          "default" : false
        },
        "requestedSessionIdFromUrl" : {
          "type" : "boolean",
          "default" : false
        },
        "session" : {
          "$ref" : "#/definitions/HttpSession"
        },
        "userPrincipal" : {
          "$ref" : "#/definitions/Principal"
        },
        "queryString" : {
          "type" : "string"
        },
        "contextPath" : {
          "type" : "string"
        },
        "method" : {
          "type" : "string"
        },
        "locales" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "characterEncoding" : {
          "type" : "string"
        },
        "parameterNames" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "serverName" : {
          "type" : "string"
        },
        "serverPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "remoteAddr" : {
          "type" : "string"
        },
        "remoteHost" : {
          "type" : "string"
        },
        "secure" : {
          "type" : "boolean",
          "default" : false
        },
        "remotePort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "localAddr" : {
          "type" : "string"
        },
        "localName" : {
          "type" : "string"
        },
        "contentLength" : {
          "type" : "integer",
          "format" : "int32"
        },
        "contentType" : {
          "type" : "string"
        },
        "localPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "locale" : {
          "$ref" : "#/definitions/Locale"
        },
        "attributeNames" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "parameterMap" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "reader" : {
          "$ref" : "#/definitions/BufferedReader"
        },
        "scheme" : {
          "type" : "string"
        },
        "inputStream" : {
          "$ref" : "#/definitions/ServletInputStream"
        },
        "protocol" : {
          "type" : "string"
        }
      }
    },
    "HttpSession" : {
      "type" : "object",
      "properties" : {
        "lastAccessedTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "maxInactiveInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sessionContext" : {
          "$ref" : "#/definitions/HttpSessionContext"
        },
        "new" : {
          "type" : "boolean",
          "default" : false
        },
        "servletContext" : {
          "$ref" : "#/definitions/ServletContext"
        },
        "valueNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "creationTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "attributeNames" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "HttpSessionContext" : {
      "type" : "object",
      "properties" : {
        "ids" : {
          "$ref" : "#/definitions/Enumeration"
        }
      }
    },
    "ImportDataResultDTO" : {
      "type" : "object",
      "properties" : {
        "numberOfTotalRecords" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numberOfInvalidRecords" : {
          "type" : "integer",
          "format" : "int32"
        },
        "invalidRecords" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "InputStream" : {
      "type" : "object"
    },
    "Locale" : {
      "type" : "object",
      "properties" : {
        "language" : {
          "type" : "string"
        },
        "script" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "variant" : {
          "type" : "string"
        },
        "extensionKeys" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "unicodeLocaleAttributes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "unicodeLocaleKeys" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "iso3Language" : {
          "type" : "string"
        },
        "iso3Country" : {
          "type" : "string"
        },
        "displayLanguage" : {
          "type" : "string"
        },
        "displayScript" : {
          "type" : "string"
        },
        "displayCountry" : {
          "type" : "string"
        },
        "displayVariant" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        }
      }
    },
    "ModelAndView" : {
      "type" : "object",
      "properties" : {
        "view" : {
          "$ref" : "#/definitions/View"
        },
        "model" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "modelMap" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "viewName" : {
          "type" : "string"
        },
        "reference" : {
          "type" : "boolean",
          "default" : false
        },
        "empty" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "MultipartFile" : {
      "type" : "object",
      "properties" : {
        "originalFilename" : {
          "type" : "string"
        },
        "contentType" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "empty" : {
          "type" : "boolean",
          "default" : false
        },
        "bytes" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        },
        "inputStream" : {
          "$ref" : "#/definitions/InputStream"
        }
      }
    },
    "Option" : {
      "type" : "object",
      "properties" : {
        "label" : {
          "type" : "string"
        },
        "value" : {
          "type" : "object"
        }
      }
    },
    "PageableParams" : {
      "type" : "object",
      "properties" : {
        "rows" : {
          "type" : "integer",
          "format" : "int32"
        },
        "page" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PersonDTO" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string"
        },
        "givenName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "familyName" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        },
        "relationshipName" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "age" : {
          "type" : "integer",
          "format" : "int32"
        },
        "gender" : {
          "type" : "string"
        },
        "patient" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "Principal" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        }
      }
    },
    "ResultsWrapperDTO" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "ServletContext" : {
      "type" : "object",
      "properties" : {
        "servlets" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "servletNames" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "serverInfo" : {
          "type" : "string"
        },
        "initParameterNames" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "servletContextName" : {
          "type" : "string"
        },
        "attributeNames" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "majorVersion" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minorVersion" : {
          "type" : "integer",
          "format" : "int32"
        },
        "contextPath" : {
          "type" : "string"
        }
      }
    },
    "ServletInputStream" : {
      "type" : "object"
    },
    "ServletRequest" : {
      "type" : "object",
      "properties" : {
        "locales" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "characterEncoding" : {
          "type" : "string"
        },
        "parameterNames" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "serverName" : {
          "type" : "string"
        },
        "serverPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "remoteAddr" : {
          "type" : "string"
        },
        "remoteHost" : {
          "type" : "string"
        },
        "secure" : {
          "type" : "boolean",
          "default" : false
        },
        "remotePort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "localAddr" : {
          "type" : "string"
        },
        "localName" : {
          "type" : "string"
        },
        "contentLength" : {
          "type" : "integer",
          "format" : "int32"
        },
        "contentType" : {
          "type" : "string"
        },
        "localPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "locale" : {
          "$ref" : "#/definitions/Locale"
        },
        "attributeNames" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "parameterMap" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "reader" : {
          "$ref" : "#/definitions/BufferedReader"
        },
        "scheme" : {
          "type" : "string"
        },
        "inputStream" : {
          "$ref" : "#/definitions/ServletInputStream"
        },
        "protocol" : {
          "type" : "string"
        }
      }
    },
    "StringBuffer" : {
      "type" : "object"
    },
    "SystemStatusResponseBody" : {
      "type" : "object"
    },
    "View" : {
      "type" : "object",
      "properties" : {
        "contentType" : {
          "type" : "string"
        }
      }
    }
  }
}